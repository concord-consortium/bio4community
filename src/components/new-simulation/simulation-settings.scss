@use "../vars.scss";

.simulation-settings {
  border: vars.$sim-border;
  border-radius: vars.$sim-radius-settings-top vars.$sim-radius-settings-top vars.$sim-radius-settings-bottom vars.$sim-radius-settings-bottom;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  height: 306px;
  position: relative;
  width: 379px;

  .settings-header {
    align-items: center;
    background-color: vars.$sim-dark-1;
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    box-sizing: border-box;
    color: white;
    display: flex;
    height: 26px;
    justify-content: center;
    padding-bottom: 4px;
    width: 100%;

    .title {
      font-weight: bold;
    }
  }

  .setting {
    align-items: center;
    display: flex;
    flex-direction: column;
    margin: 13.5px 0 0 14px;
    width: 208px;

    .setting-title {
      font-weight: bold;
    }

    .video-control-row {
      display: flex;
      margin: 8.5px 0 5px -10px;

      .play-button {
        background-image: url("../../assets/new-sim/buttons/play-button-on.svg");
        background-color: rgba(0, 0, 0, 0);
        border: none;
        cursor: pointer;
        height: 48px;
        width: 48px;

        &:hover {
          background-image: url("../../assets/new-sim/buttons/play-button-hover.svg");
        }

        &.playing {
          background-image: url("../../assets/new-sim/buttons/pause-button-on.svg");

          &:hover {
            background-image: url("../../assets/new-sim/buttons/pause-button-hover.svg");
          }
        }
      }

      .slider-container {
        align-items: center;
        display: flex;
        height: 48px;
        margin-left: 37.5px;
        width: 106px;

        .rc-slider {
          position: relative;
          top: -7px;
          width: 80px;
          height: 0px;
          padding: 13px;
          border-radius: 2px;
          touch-action: none;
          cursor: pointer;
      
          &-rail {
            position: absolute;
            width: 80px;
            height: 3px;
            background-color: vars.$sim-light-5;
            border-radius: 2px;
          }
      
          &-track {
            position: relative;
            width: 80px;
            height: 3px;
            background-color: vars.$sim-dark-1;
            border-radius: 2px;
          }
      
          &-handle {
            background-color: vars.$sim-dark-1;
            position: absolute;
            top: 1px;
            width: 26px;
            height: 26px;
            border-radius: 50%;
            cursor: grab;
            touch-action: pan-x;
            z-index: 2;

            transition: height .1s, top .1s, width .1s;

            // This hack positions the handle at the end of the slider properly.
            // It's necessary because of the horizonal padding added to .rc-slider.
            // This was added to improve clicking the ends of the slider, but it
            // makes the handle go beyond the end.
            // This only works because this slider has <= three positions.
            &[aria-valuenow='0'] {
              margin-left: 13px;
            }

            &[aria-valuenow='2'] {
              margin-left: -13px;
            }
      
            &:active {
              cursor: grabbing;
            }

            &-dragging {
              height: 34px;
              top: -3px;
              width: 34px;
            }

            &:hover {
              height: 34px;
              top: -3px;
              width: 34px;
            }
          }
      
          &-mark {
            position: absolute;
            top: 31px;
            left: 13px;
            width: 80px;
          }
      
          &-mark-text {
            position: absolute;
            width: 100px;
            display: inline-block;
            text-align: center;
            vertical-align: middle;
            cursor: pointer;
      
            &-active {
              color: vars.$sim-dark-1;
            }
          }
      
          &-step {
            position: absolute;
            width: 80px;
            height: 4px;
            background: transparent;
            pointer-events: none;
          }
      
          &-dot {
            background-color: white;
            border: 2px solid vars.$sim-light-5;
            position: absolute;
            top: -5px;
            width: 3px;
            height: 3px;
            vertical-align: middle;
            border-radius: 50%;
            cursor: pointer;

            &-active {
              border: 2px solid vars.$sim-dark-1;
            }
      
            &-reverse {
              margin-right: -4px;
            }
          }

          .ghost {
            background-color: rgba(0, 0, 0, 0);
            border-radius: 50%;
            height: 26px;
            pointer-events: none;
            position: absolute;
            top: 1px;
            width: 26px;

            &.ghost0 {
              left: 0px;
            }

            &.ghost1 {
              left: 40px;
            }

            &.ghost2 {
              left: 80px;
            }

            &.visible {
              background-color: rgba(4, 129, 160, 0.5);
            }
          }
        }
      }
    }
  }

  .person {
    bottom: 107px;
    position: absolute;
    right: 25px;

    &.brain {
      bottom: 80px;
      right: 31px;
    }
  }
}
